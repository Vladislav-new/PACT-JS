name: contract-ci

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  consumer:
    runs-on: ubuntu-latest
    services:
      broker:
        image: pactfoundation/pact-broker:latest
        ports:
          - 9292:9292
        env:
          PACT_BROKER_DATABASE_URL: sqlite:////tmp/pact_broker.sqlite
          PACT_BROKER_LOG_LEVEL: INFO
          PACT_BROKER_BASIC_AUTH_USERNAME: ${{ secrets.PACT_BROKER_USERNAME }}
          PACT_BROKER_BASIC_AUTH_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install deps (root)
        run: npm ci
      - name: Wait for broker
        run: |
          for i in {1..30}; do
            if curl -sf -u "${{ secrets.PACT_BROKER_USERNAME }}:${{ secrets.PACT_BROKER_PASSWORD }}" http://localhost:9292/diagnostic/status/heartbeat > /dev/null; then
              echo "Broker is up"; exit 0; fi; sleep 2; done; exit 1
      - name: Run consumer pact tests
        run: PROVIDER_BASE_URL=http://localhost:12345 npm run -w consumer test:pact
      - name: Publish contracts
        run: npx pact-broker publish ./consumer/pacts --consumer-app-version ${{ github.sha }} --branch ${{ github.ref_name }} --broker-base-url http://localhost:9292 --broker-username ${{ secrets.PACT_BROKER_USERNAME }} --broker-password ${{ secrets.PACT_BROKER_PASSWORD }}

  provider:
    needs: [consumer]
    runs-on: ubuntu-latest
    services:
      broker:
        image: pactfoundation/pact-broker:latest
        ports:
          - 9292:9292
        env:
          PACT_BROKER_DATABASE_URL: sqlite:////tmp/pact_broker.sqlite
          PACT_BROKER_LOG_LEVEL: INFO
          PACT_BROKER_BASIC_AUTH_USERNAME: ${{ secrets.PACT_BROKER_USERNAME }}
          PACT_BROKER_BASIC_AUTH_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install deps (root)
        run: npm ci
      - name: Wait for broker
        run: |
          for i in {1..30}; do
            if curl -sf -u "${{ secrets.PACT_BROKER_USERNAME }}:${{ secrets.PACT_BROKER_PASSWORD }}" http://localhost:9292/diagnostic/status/heartbeat > /dev/null; then
              echo "Broker is up"; exit 0; fi; sleep 2; done; exit 1
      - name: Verify pacts
        run: PACT_BROKER_BASE_URL=http://localhost:9292 PACT_BROKER_USERNAME=${{ secrets.PACT_BROKER_USERNAME }} PACT_BROKER_PASSWORD=${{ secrets.PACT_BROKER_PASSWORD }} GIT_SHA=${{ github.sha }} GITHUB_REF_NAME=${{ github.ref_name }} npm run -w provider verify:pact

  can-i-deploy:
    needs: [consumer, provider]
    runs-on: ubuntu-latest
    services:
      broker:
        image: pactfoundation/pact-broker:latest
        ports:
          - 9292:9292
        env:
          PACT_BROKER_DATABASE_URL: sqlite:////tmp/pact_broker.sqlite
          PACT_BROKER_LOG_LEVEL: INFO
          PACT_BROKER_BASIC_AUTH_USERNAME: ${{ secrets.PACT_BROKER_USERNAME }}
          PACT_BROKER_BASIC_AUTH_PASSWORD: ${{ secrets.PACT_BROKER_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Wait for broker
        run: |
          for i in {1..30}; do
            if curl -sf -u "${{ secrets.PACT_BROKER_USERNAME }}:${{ secrets.PACT_BROKER_PASSWORD }}" http://localhost:9292/diagnostic/status/heartbeat > /dev/null; then
              echo "Broker is up"; exit 0; fi; sleep 2; done; exit 1
      - name: Can I Deploy
        run: npx pact-broker can-i-deploy --pacticipant FrontendConsumer --to ProductProvider --latest --broker-base-url http://localhost:9292 --broker-username ${{ secrets.PACT_BROKER_USERNAME }} --broker-password ${{ secrets.PACT_BROKER_PASSWORD }}